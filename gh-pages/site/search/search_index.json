{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Bem-vindo ao projeto O projeto de reengenharia e implementa\u00e7\u00e3o de novas fun\u00e7\u00f5es no aplicativo Guardi\u00f5es da Sa\u00fade foi desenvolvido por uma equipe de alunos da mat\u00e9ria de M\u00e9todos de Desenvolvimento de Software e Requisitos de Software. Colaboradores Nome Mat\u00e9ria Caio C\u00e9sar Oliveira REQ Hian Praxedes de Souza REQ Luiz Guilherme Palhares Pettengill REQ Matheus Pimentel Leal REQ Taynara Cristina Ribeiro Marcellos REQ Iago de Sousa Campelo Matos MDS Igor Thiago Lima de Santana MDS Juan Mangueira Alves MDS Marcus Vin\u00edcius Paiva Martins MDS Thiago Vivan Bastos MDS","title":"Bem-vindo ao projeto"},{"location":"#bem-vindo-ao-projeto","text":"O projeto de reengenharia e implementa\u00e7\u00e3o de novas fun\u00e7\u00f5es no aplicativo Guardi\u00f5es da Sa\u00fade foi desenvolvido por uma equipe de alunos da mat\u00e9ria de M\u00e9todos de Desenvolvimento de Software e Requisitos de Software.","title":"Bem-vindo ao projeto"},{"location":"#colaboradores","text":"Nome Mat\u00e9ria Caio C\u00e9sar Oliveira REQ Hian Praxedes de Souza REQ Luiz Guilherme Palhares Pettengill REQ Matheus Pimentel Leal REQ Taynara Cristina Ribeiro Marcellos REQ Iago de Sousa Campelo Matos MDS Igor Thiago Lima de Santana MDS Juan Mangueira Alves MDS Marcus Vin\u00edcius Paiva Martins MDS Thiago Vivan Bastos MDS","title":"Colaboradores"},{"location":"produto/","text":"Produto Documento de Requisitos","title":"Produto"},{"location":"produto/#produto","text":"","title":"Produto"},{"location":"produto/#documento-de-requisitos","text":"","title":"Documento de Requisitos"},{"location":"projeto/","text":"Projeto Ciclo de Vida: Incremental O ciclo de vida incremental foi escolhido para flexibilizar os requisitos que, mesmo sendo fixos, pode ser que sejam feitas altera\u00e7\u00f5es. Processo de Desenvolvimento O processo de desenvolvimento foi baseado na metodologia eXtreme Programming, pela periodicidade dos loops e o lan\u00e7amentos de pequenas releases. Utiliza-se desta metodologia: Programa\u00e7\u00e3o em pares (Pair Programming) Refatora\u00e7\u00e3o de c\u00f3digo Testes unit\u00e1rios Reuni\u00f5es di\u00e1rias (Dailies) Posse de c\u00f3digo coletiva (Collective Code Ownership) Para a gest\u00e3o de tarefas ser\u00e3o utilizadas as Sprints, vindas da metodologia Scrum, e a tabela Kanban, vinda da metodologia Kanban. Dentre as atividades, ser\u00e3o desempenhadas: Requisitos - Defini\u00e7\u00e3o das User Stories. An\u00e1lise e Design - Modelagem visual. - Valida\u00e7\u00e3o do prot\u00f3tipo. Constru\u00e7\u00e3o - Mapeamento para c\u00f3digo a partir da modelagem visual. - Implementa\u00e7\u00e3o do c\u00f3digo atrav\u00e9s de classes criadas. Testes - Automa\u00e7\u00e3o de testes unit\u00e1rios utilizando Docker. Tecnologias O projeto Guardi\u00f5es da Sa\u00fade j\u00e1 possui tecnologias bem definidas, sendo assim, apenas adotamos as mesmas, sendo elas: Ruby/Ruby on Rails React Native Docker","title":"Projeto"},{"location":"projeto/#projeto","text":"","title":"Projeto"},{"location":"projeto/#ciclo-de-vida-incremental","text":"O ciclo de vida incremental foi escolhido para flexibilizar os requisitos que, mesmo sendo fixos, pode ser que sejam feitas altera\u00e7\u00f5es.","title":"Ciclo de Vida: Incremental"},{"location":"projeto/#processo-de-desenvolvimento","text":"O processo de desenvolvimento foi baseado na metodologia eXtreme Programming, pela periodicidade dos loops e o lan\u00e7amentos de pequenas releases. Utiliza-se desta metodologia: Programa\u00e7\u00e3o em pares (Pair Programming) Refatora\u00e7\u00e3o de c\u00f3digo Testes unit\u00e1rios Reuni\u00f5es di\u00e1rias (Dailies) Posse de c\u00f3digo coletiva (Collective Code Ownership) Para a gest\u00e3o de tarefas ser\u00e3o utilizadas as Sprints, vindas da metodologia Scrum, e a tabela Kanban, vinda da metodologia Kanban. Dentre as atividades, ser\u00e3o desempenhadas: Requisitos - Defini\u00e7\u00e3o das User Stories. An\u00e1lise e Design - Modelagem visual. - Valida\u00e7\u00e3o do prot\u00f3tipo. Constru\u00e7\u00e3o - Mapeamento para c\u00f3digo a partir da modelagem visual. - Implementa\u00e7\u00e3o do c\u00f3digo atrav\u00e9s de classes criadas. Testes - Automa\u00e7\u00e3o de testes unit\u00e1rios utilizando Docker.","title":"Processo de Desenvolvimento"},{"location":"projeto/#tecnologias","text":"O projeto Guardi\u00f5es da Sa\u00fade j\u00e1 possui tecnologias bem definidas, sendo assim, apenas adotamos as mesmas, sendo elas: Ruby/Ruby on Rails React Native Docker","title":"Tecnologias"},{"location":"sprints/","text":"Sprints Sprint 00","title":"Sprints"},{"location":"sprints/#sprints","text":"","title":"Sprints"},{"location":"sprints/#sprint-00","text":"","title":"Sprint 00"}]}